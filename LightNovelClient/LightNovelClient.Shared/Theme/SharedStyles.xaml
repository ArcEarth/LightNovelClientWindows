
<!--  Copyright (c) Microsoft. All rights reserved.  -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:LightNovel.Controls">

    <!--  Non-brush values that vary across themes  -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PlatformStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <x:String x:Key="BackButtonGlyph"></x:String>
            <x:String x:Key="BackButtonSnappedGlyph"></x:String>
            <!--  Lime Green  -->
            <Color x:Key="AppAccentColor">#FFA4C400</Color>
            <!--  Semi Light Lime Green  -->
            <Color x:Key="AppAccentColorSemiLight">#FF89A100</Color>
            <!--  Light Lime Green  -->
            <Color x:Key="AppAccentColorLight">#FF6F8400</Color>
            <!--  87 percent Black  -->
            <Color x:Key="AppForegroundColor">#DEFFFFFF</Color>
            <Color x:Key="AppForegroundDimColor">#DEDADADA</Color>
            <!--  100 percent White  -->
            <Color x:Key="AppBackgroundColor">#FF000000</Color>
            <Color x:Key="AppBackgroundDimColor">#FF252525</Color>
            <!--  66 percent transparent  -->
            <Color x:Key="AppSemitransparentColor">#AA000000</Color>
            <Color x:Key="AppSubtleColor">#66FFFFFF</Color>
            <Color x:Key="AppSemitransparentColor10">#1F000000</Color>

            <SolidColorBrush x:Key="AppForegroundBrush" Color="{ThemeResource AppForegroundColor}" />
            <SolidColorBrush x:Key="AppForegroundDimBrush" Color="{ThemeResource AppForegroundDimColor}" />
            <SolidColorBrush x:Key="AppBackgroundBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBackgroundDimBrush" Color="{ThemeResource AppBackgroundDimColor}" />

            <SolidColorBrush x:Key="ToggleSwitchCurtainBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxHighlightedBorderThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneAccentBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneHighContrastSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor10}" />
            <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBorderThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush" Color="{ThemeResource AppAccentColorLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColorSemiLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="TextBoxDisabledBorderThemeBrush" Color="Transparent" />
        </ResourceDictionary>

        <!--<ResourceDictionary x:Key="Dark">
            <x:String x:Key="BackButtonGlyph"></x:String>
            <x:String x:Key="BackButtonSnappedGlyph"></x:String>
        -->
        <!--  Lime Green  -->
        <!--
            <Color x:Key="AppAccentColor">#FFA4C400</Color>
        -->
        <!--  Semi Light Lime Green  -->
        <!--
            <Color x:Key="AppAccentColorSemiLight">#FF89A100</Color>
        -->
        <!--  Light Lime Green  -->
        <!--
            <Color x:Key="AppAccentColorLight">#FF6F8400</Color>
        -->
        <!--  87 percent White  -->
        <!--
            <Color x:Key="AppForegroundColor">#DEFFFFFF</Color>
            <Color x:Key="AppForegroundDimColor">#DEDADADA</Color>
        -->
        <!--  100 percent White  -->
        <!--
            <Color x:Key="AppBackgroundColor">#FF000000</Color>
            <Color x:Key="AppBackgroundDimColor">#FF252525</Color>
        -->
        <!--  66 percent transparent  -->
        <!--
            <Color x:Key="AppSemitransparentColor">#AA000000</Color>
            <Color x:Key="AppSubtleColor">#66FFFFFF</Color>
            <Color x:Key="AppSemitransparentColor10">#1F000000</Color>

            <SolidColorBrush x:Key="AppForegroundBrush" Color="{ThemeResource AppForegroundColor}" />
            <SolidColorBrush x:Key="AppForegroundDimBrush" Color="{ThemeResource AppForegroundDimColor}" />
            <SolidColorBrush x:Key="AppBackgroundBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBackgroundDimBrush" Color="{ThemeResource AppBackgroundDimColor}" />

            <SolidColorBrush x:Key="ToggleSwitchCurtainBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxHighlightedBorderThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneAccentBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneHighContrastSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor10}" />
            <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBorderThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush" Color="{ThemeResource AppAccentColorLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColorSemiLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="TextBoxDisabledBorderThemeBrush" Color="Transparent" />
        </ResourceDictionary>-->


        <ResourceDictionary x:Key="Light">
            <!--  Lime Green  -->
            <Color x:Key="AppAccentColor">#FFA4C400</Color>
            <!--  Semi Light Lime Green  -->
            <Color x:Key="AppAccentColorSemiLight">#FFCAE05A</Color>
            <!--  Light Lime Green  -->
            <Color x:Key="AppAccentColorLight">#FFE5FA78</Color>
            <!--  87 percent Black  -->
            <Color x:Key="AppForegroundColor">#DE000000</Color>
            <Color x:Key="AppForegroundDimColor">#DE252525</Color>
            <!--  100 percent White  -->
            <Color x:Key="AppBackgroundColor">#FFFFFFFF</Color>
            <Color x:Key="AppBackgroundDimColor">#FFDADADA</Color>
            <!--  Special colors  -->
            <!--  66 percent transparent  -->
            <Color x:Key="AppSemitransparentColor">#AAFFFFFF</Color>
            <Color x:Key="AppSubtleColor">#66000000</Color>
            <Color x:Key="AppSemitransparentColor10">#1FFFFFFF</Color>

            <SolidColorBrush x:Key="AppForegroundBrush" Color="{ThemeResource AppForegroundColor}" />
            <SolidColorBrush x:Key="AppForegroundDimBrush" Color="{ThemeResource AppForegroundDimColor}" />
            <SolidColorBrush x:Key="AppBackgroundBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBackgroundDimBrush" Color="{ThemeResource AppBackgroundDimColor}" />

            <SolidColorBrush x:Key="ToggleSwitchCurtainBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxHighlightedBorderThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="ComboBoxPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneAccentBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="PhoneHighContrastSelectedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor10}" />
            <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="ToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppSemitransparentColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBackgroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedBorderThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBackgroundThemeBrush" Color="{ThemeResource AppAccentColorLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPointerOverBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBackgroundThemeBrush" Color="{ThemeResource AppAccentColorSemiLight}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedBorderThemeBrush" Color="Transparent" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedPressedForegroundThemeBrush" Color="{ThemeResource AppBackgroundColor}" />
            <SolidColorBrush x:Key="AppBarToggleButtonCheckedForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />
            <SolidColorBrush x:Key="TextBoxDisabledBorderThemeBrush" Color="Transparent" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <x:String x:Key="BackButtonGlyph"></x:String>
            <x:String x:Key="BackButtonSnappedGlyph"></x:String>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
    <!--  System chrome color  -->
    <Color x:Key="AppChromeColor">#FFDDDDDD</Color>
    <!--  Deprecated colors  -->
    <!--  20 percent Black  -->
    <Color x:Key="AppInactiveColor">#33000000</Color>
    <!--  Inverse inactive background color  -->
    <Color x:Key="AppInverseInactiveColor">#FFE5E5E5</Color>
    <!--  Inverse background color  -->
    <Color x:Key="AppInverseBackgroundColor">#FFDDDDDD</Color>
    <!--  60 percent Black  -->
    <Color x:Key="AppBorderColor">#99000000</Color>
    <!--  40 percent Black  -->

    <SolidColorBrush x:Key="ProgressBarIndeterminateForegroundThemeBrush" Color="{ThemeResource AppAccentColor}" />

    <SolidColorBrush x:Key="AppSubtleBrush" Color="{ThemeResource AppSubtleColor}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
    <SolidColorBrush x:Key="AppSemitransparentBrush" Color="{ThemeResource AppSemitransparentColor}" />
    <SolidColorBrush x:Key="AppAccentBrush" Color="{ThemeResource AppAccentColor}" />
    <SolidColorBrush x:Key="AppAccentBrushSemiLight" Color="{ThemeResource AppAccentColorSemiLight}" />
    <SolidColorBrush x:Key="AppAccentBrushLight" Color="{ThemeResource AppAccentColorLight}" />


    <!--  Font sizes  -->
    <!--  13pt  -->
    <x:Double x:Key="AppFontSizeSmall">13</x:Double>
    <!--  15pt  -->
    <x:Double x:Key="AppFontSizeNormal">15</x:Double>
    <!--  17pt  -->
    <x:Double x:Key="AppFontSizeMedium">17</x:Double>
    <!--  20pt  -->
    <x:Double x:Key="AppFontSizeMediumLarge">20</x:Double>
    <!--  24pt  -->
    <x:Double x:Key="AppFontSizeLarge">24</x:Double>
    <!--  32pt  -->
    <x:Double x:Key="AppFontSizeExtraLarge">32</x:Double>
    <!--  42pt  -->
    <x:Double x:Key="AppFontSizeExtraExtraLarge">42</x:Double>
    <!--  140pt  -->
    <x:Double x:Key="AppFontSizeHuge">140</x:Double>

    <x:Double x:Key="HubSectionHeaderThemeFontSize">26.667</x:Double>
    <FontWeight x:Key="HubSectionHeaderThemeFontWeight">SemiLight</FontWeight>
    <FontFamily x:Key="SymbolThemeFontFamily">Segoe UI Symbol</FontFamily>


    <!--  TextBlock styles  -->
    <Style x:Key="AppTextBlockBase" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeNormal}" />
        <Setter Property="Foreground" Value="{StaticResource AppForegroundBrush}" />
    </Style>
    <Style x:Key="AppTextNormalStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock" />
    <Style x:Key="AppTextSubtleStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AppSubtleBrush}" />
        <Setter Property="FontFamily" Value="Global User Interface" />
    </Style>
    <Style x:Key="AppTextTitle1Style"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeExtraLarge}" />
    </Style>
    <Style x:Key="AppTextTitle2Style"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeLarge}" />
    </Style>
    <Style x:Key="AppTextTitle3Style"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeMediumLarge}" />
    </Style>
    <Style x:Key="AppTextExtraLargeStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeExtraLarge}" />
    </Style>
    <Style x:Key="AppTextGroupHeaderStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeLarge}" />
        <Setter Property="Foreground" Value="{StaticResource AppSubtleBrush}" />
    </Style>
    <Style x:Key="AppTextLargeStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeLarge}" />
    </Style>
    <Style x:Key="AppTextSmallStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeSmall}" />
        <Setter Property="Foreground" Value="{StaticResource AppSubtleBrush}" />
    </Style>
    <Style x:Key="AppTextAccentStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{StaticResource AppAccentBrush}" />
    </Style>
    <Style x:Key="AppTextHugeStyle"
           BasedOn="{StaticResource AppTextBlockBase}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{StaticResource AppFontSizeHuge}" />
    </Style>

    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Typography.StylisticSet20" Value="True" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
    </Style>

    <Style x:Key="BaselineTextStyle"
           BasedOn="{StaticResource BasicTextStyle}"
           TargetType="TextBlock">
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <!--  Properly align text along its baseline  -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="56" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="LineHeight" Value="40" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-2" Y="8" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubheaderTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="26.667" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="LineHeight" Value="30" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="ItemTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock" />

    <Style x:Key="BodyTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
    </Style>

    <Style x:Key="CaptionTextStyle"
           BasedOn="{StaticResource BaselineTextStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
    </Style>

    <Style TargetType="controls:ExpanderView">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:ExpanderView">
                        <Grid>
                            <Grid.Resources>
                                <QuadraticEase x:Key="QuadraticEaseOut" EasingMode="EaseOut" />
                                <QuadraticEase x:Key="QuadraticEaseInOut" EasingMode="EaseInOut" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="21" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.States>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Storyboard.TargetProperty="(FrameworkElement.Height)"
                                                                 To="0" />
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 To="0.0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Storyboard.TargetProperty="(FrameworkElement.Height)" />
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 To="1.0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Collapsed"
                                                          GeneratedDuration="0:0:0.15"
                                                          To="Expanded">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ItemsCanvas" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                          KeyTime="0:0:0.00"
                                                                          Value="0" />
                                                    <EasingDoubleKeyFrame x:Name="CollapsedToExpandedKeyFrame"
                                                                          EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                          KeyTime="0:0:0.15"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 To="1.0" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Expanded"
                                                          GeneratedDuration="0:0:0.15"
                                                          To="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ItemsCanvas" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <EasingDoubleKeyFrame x:Name="ExpandedToCollapsedKeyFrame"
                                                                          EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.00"
                                                                          Value="1" />
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.15"
                                                                          Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ItemsCanvas" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.00"
                                                                          Value="1.0" />
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.15"
                                                                          Value="0.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ItemsCanvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.00"
                                                                          Value="0.0" />
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}"
                                                                          KeyTime="0:0:0.15"
                                                                          Value="-35" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandabilityStates">
                                    <VisualState x:Name="Expandable" />
                                    <VisualState x:Name="NonExpandable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandableContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Line" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NonExpandableContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ListBoxItem x:Name="ExpandableContent"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="21" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl x:Name="Header"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Grid.ColumnSpan="2"
                                                    HorizontalAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Content="{TemplateBinding Header}"
                                                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                    <ContentControl x:Name="Expander"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Margin="11,0,0,0"
                                                    HorizontalAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Content="{TemplateBinding Expander}"
                                                    ContentTemplate="{TemplateBinding ExpanderTemplate}" />
                                    <Grid x:Name="ExpanderPanel"
                                          Grid.Row="0"
                                          Grid.RowSpan="2"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          Background="Transparent" />
                                </Grid>
                            </ListBoxItem>
                            <Line x:Name="Line"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  Grid.Column="0"
                                  HorizontalAlignment="Left"
                                  Stretch="Fill"
                                  Stroke="{StaticResource PhoneAccentBrush}"
                                  StrokeEndLineCap="Square"
                                  StrokeStartLineCap="Square"
                                  StrokeThickness="5"
                                  X1="0"
                                  X2="0"
                                  Y1="0"
                                  Y2="1" />
                            <!--<Rectangle x:Name="Line" Grid.Row="0" Grid.Column="0"
                                  Grid.RowSpan="3"
                                  HorizontalAlignment="Left"
                                  Fill="{StaticResource PhoneAccentBrush}"
                                  Width="5"
                                  Stretch="Fill"/>-->
                            <ContentControl x:Name="NonExpandableContent"
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Content="{TemplateBinding NonExpandableHeader}"
                                            ContentTemplate="{TemplateBinding NonExpandableHeaderTemplate}"
                                            Visibility="Collapsed" />
                            <Canvas x:Name="ItemsCanvas"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Margin="11,0,0,0"
                                    Opacity="0.0">
                                <ItemsPresenter x:Name="Presenter" />
                                <Canvas.RenderTransform>
                                    <CompositeTransform TranslateY="0.0" />
                                </Canvas.RenderTransform>
                            </Canvas>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--  Button styles  -->
    <Style x:Key="NavigationBackButtonNormalStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{ThemeResource AppBarItemBackgroundThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="41" Height="41">
                            <Ellipse x:Name="Ellipse"
                                     Fill="{TemplateBinding Background}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="2"
                                     UseLayoutRounding="False" />
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Foreground="{TemplateBinding Foreground}">
                                <PathIcon Data="F1 M 17.4126,18L 24.0752,11L 17.6558,11L 8.77931,20.4678L 8.77931,20.5322L 17.6558,30L 24.0752,30L 17.4126,23L 32,23L 32,18L 17.4126,18 Z " />
                            </ContentPresenter>
                        </Grid>
                        <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="1.5"
                                   StrokeEndLineCap="Square" />
                        <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="0.5"
                                   StrokeEndLineCap="Square" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
        <Border x:Name="Root"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HightlightStates">
                    <VisualState x:Name="NoneHightlight" />
                    <VisualState x:Name="Highlight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppAccentBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow"
                  Width="9.67"
                  Height="10.94"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M4.12,0 L9.67,5.47 L4.12,10.94 L0,10.88 L5.56,5.47 L0,0.06 z"
                  Fill="{TemplateBinding Foreground}"
                  RenderTransformOrigin="0.5,0.5"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
        <Border x:Name="Root"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HightlightStates">
                    <VisualState x:Name="NoneHightlight" />
                    <VisualState x:Name="Highlight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppAccentBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>

                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow"
                  Width="9.67"
                  Height="10.94"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M5.55,0 L9.67,0.06 L4.12,5.47 L9.67,10.88 L5.55,10.94 L0,5.48 z"
                  Fill="{TemplateBinding Foreground}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
        <Border x:Name="Root"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HightlightStates">
                    <VisualState x:Name="NoneHightlight" />
                    <VisualState x:Name="Highlight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppAccentBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow"
                  Width="10.94"
                  Height="9.67"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0.06,0 L5.47,5.56 L10.88,0 L10.94,4.12 L5.48,9.67 L0,4.12 z"
                  Fill="{TemplateBinding Foreground}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
        <Border x:Name="Root"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HightlightStates">
                    <VisualState x:Name="NoneHightlight" />
                    <VisualState x:Name="Highlight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppAccentBrush}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow"
                  Width="10.94"
                  Height="9.67"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M5.63,0 L11.11,5.55 L11.05,9.67 L5.64,4.12 L0.23,9.67 L0.17,5.55 z"
                  Fill="{TemplateBinding Foreground}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
        </Border>
    </ControlTemplate>
    <Style x:Key="LeftArrowIconRectBackground" TargetType="Button">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{ThemeResource HorizontalPreviousTemplate}" />
    </Style>
    <Style x:Key="RightArrowIconRectBackground" TargetType="Button">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{ThemeResource HorizontalNextTemplate}" />
    </Style>

    <Style x:Key="CircleButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Ellipse x:Name="Ellipse"
                                     Fill="{TemplateBinding Background}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     UseLayoutRounding="False" />
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Content="{TemplateBinding Content}"
                                              Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="1.5"
                                   StrokeEndLineCap="Square" />
                        <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="0.5"
                                   StrokeEndLineCap="Square" />
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PureButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Default to 10-pixel spacing between grid items (after accounting for 4-pixel insets for focus)  -->

    <Style TargetType="GridViewItem">
        <Setter Property="Margin" Value="0,0,2,2" />
    </Style>

    <!--  ScrollViewer styles  -->

    <Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <!--  Page layout roots typically use entrance animations and a theme-appropriate background color  -->

    <Style x:Key="LayoutRootStyle" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource AppBackgroundBrush}" />
        <Setter Property="ChildrenTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <EntranceThemeTransition />
                </TransitionCollection>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
